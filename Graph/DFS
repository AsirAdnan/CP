#include<iostream>
#include<iomanip>
#include<climits>
#include<cmath>
#include<vector>
#include<map>
#include<queue>
#include<algorithm>
#include<cstring>
#include<stack>
using namespace std;
using ll=long long;
vector<int> V[100001];
vector<bool> visited(100001,false);
void dfs(int x)
{
    visited[x]=true;
    for (int i: V[x]){
        if (!visited[i]){
            dfs(i);
        }
    }
}
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int n,m;
    cin>>n>>m;
    for (int i=0;i<m;i++){
        int x,y;
        cin>>x>>y;
        V[x].push_back(y);
        V[y].push_back(x);
    }
    for (int i=1;i<=n;i++){
        if (!visited[i]){
            ans.push_back({i,last});
            dfs(i);
        }
    }
}
