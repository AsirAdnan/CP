#include<iostream>
#include<vector>
#include<map>
#include<unordered_map>
#include<algorithm>
using namespace std;
int main()
{
    int n,w,x;
    cin>>n>>w>>x;
    unordered_map<int,vector<long long>> m;
    while(n--){
        long long a,b;
        cin>>a>>b;
        m[b].push_back(a);
    }
    long long dis;
    unordered_map<int,vector<long long>> fm;
    for (int i=0;i<w;i++) {
        cin>>dis;
        sort(m[i+1].begin(),m[i+1].end());
        long long p=0;
        for (auto j: m[i+1]){
            if (p+j<=dis) {
                p+=j;
                fm[i+1].push_back(0);
            }
            else{
                fm[i+1].push_back(j-dis+p);
                p=dis;
            }
        }
    }
    vector<long long> v;
    int z=0;
    for (int i=1;i<=w;i++){
        for (auto j: fm[i]){
            if (j==0) z++;
            else v.push_back(j);
        }
    }
    sort(v.begin(),v.end());
    vector<long long> pre(v.size()+1);
    pre[0]=0;
    for (int i=1;i<=v.size();i++){
        pre[i]=pre[i-1]+v[i-1];
    }
    //for (auto p: pre) cout<<p<<endl;
    while(x--){
        long long k;
        cin>>k;
        long long ans=0;
        int l=0,r=pre.size();
        while(l+1<r){
            int m=(l+r)/2;
            if (pre[m]<=k) l=m;
            else r=m-1;
        }
        cout<<l+z<<endl;
    }

}
